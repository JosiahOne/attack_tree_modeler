openapi: 3.0.1
info:
  title: attack_tree_modeler
  description: 'API specification for the attack_tree_modeler API service.'
  contact:
    email: na@example.com
  version: 1.0.0
externalDocs:
  description: attack_tree_modeler on GitHub
  url: https://github.com/JosiahOne/attack_tree_modeler
servers:
- url: https://riskytrees.com/api/v1
paths:
  /auth/register:
    post:
      tags:
      - auth
      summary: Registers a new user
      operationId: registerUser
      requestBody:
        description: User details that you want to register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
        required: true
      responses:
        200:
          description: User registered succesfully
          content: {}
  /auth/login:
    post:
      tags:
      - auth
      summary: Logins a new user and returns a session token
      operationId: loginUser
      requestBody:
        description: User details that you want to login with
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
        required: true
      responses:
        200:
          description: User logged in succesfully
          content: {}
  /auth/logout:
    post:
      tags:
      - auth
      summary: Logouts the current user and invalidates the session token
      operationId: logoutUser
      responses:
        200:
          description: User logged out succesfully
          content: {}

  /projects:
    post:
      tags:
      - project
      summary: Creates a new empty project
      operationId: createProject
      requestBody:
        description: Initial details about the project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProject'
        required: true
      responses:
        200:
          description: Project created succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
  /projects/{id}/trees:
    get:
      tags:
      - project
      summary: Gets a list of trees relevant to this project
      operationId: getTrees
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Got list of trees successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTreesResponse'
    post:
      tags:
      - project
      summary: Creates a new empty tree
      operationId: createTree
      requestBody:
        description: Initial details about the tree
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTree'
        required: true
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Tree created succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTreeResponse'
  /projects/{projectId}/trees/{treeId}:
    get:
      tags:
      - project
      summary: View details of a single tree
      operationId: getTree
      parameters:
        - in: path
          name: projectId
          schema:
            type: integer
          required: true
        - in: path
          name: treeId
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Got tree successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreeResponse'

  /projects/{projectId}/nodes/{nodeId}:
    get:
      tags:
      - project
      summary: View details of a single node
      operationId: getNode
      parameters:
        - in: path
          name: projectId
          schema:
            type: integer
          required: true
        - in: path
          name: nodeId
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Got node successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeResponse'
  /models:
    get:
      tags:
      - model
      summary: Gets a list of available models
      operationId: getModels
      responses:
        200:
          description: Got list of models successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResponse'

components:
  schemas:
    RegisterUser:
      type: object
      properties:
        email:
          type: string
          format: email

    CreateProject:
      type: object
      properties:
        title:
          type: string


    CreateProjectResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        result:
          type: object
          properties:
            id:
              type: integer
            title:
              type: string

    GetModelsResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        result:
          type: object
          properties:
            models:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string

    FullNodeData:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        modelAttributes:
          type: object
        conditionAttribute:
          type: string
        treeRefId:
          type: integer


    NodeResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        result:
          type: object
          properties:
            schema:
              $ref: '#/components/schemas/FullNodeData'

    ListTreesResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        result:
          type: object
          properties:
            trees:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string

    FullTreeData:
      allOf:
        - $ref: '#/components/schemas/CreateTree'
      type: object
      properties:
        nodes:
          type: array
          items:
            type: object
            properties:
              nodeId:
                type: integer
        rootNode:
          type: integer


    TreeResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        result:
          type: object
          properties:
            schema:
              $ref: '#/components/schemas/FullTreeData'


    CreateTree:
      type: object
      properties:
        title:
          type: string

    CreateTreeResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
      type: object
      properties:
        result:
          type: object
          properties:
            id:
              type: integer
            title:
              type: string

    ApiResponse:
      type: object
      properties:
        ok:
          type: string
        message:
          type: string
        result:
          type: object
